name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc pkg-config libgtk-4-dev dpkg-dev pacman-package-manager

      - name: Build theme-manager
        run: |
          gcc `pkg-config --cflags gtk4` -o theme-manager theme-manager.c `pkg-config --libs gtk4`

      - name: Create artifact
        uses: actions/upload-artifact@v4
        with:
          name: theme-manager
          path: theme-manager

      - name: Build .deb package
        run: |
          mkdir -p debian/usr/bin debian/usr/share/icons/hicolor/256x256/apps debian/usr/share/applications
          cp theme-manager debian/usr/bin/
          cp favicon.svg debian/usr/share/icons/hicolor/256x256/apps/theme-manager.svg
          cp theme-manager.desktop debian/usr/share/applications/
          dpkg-deb --build debian theme-manager.deb

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: theme-manager-deb
          path: theme-manager.deb

      - name: Build .pkg artifact
        run: |
          makepkg -fc

      - name: Upload .pkg artifact
        uses: actions/upload-artifact@v4
        with:
          name: theme-manager-pkg
          path: theme-manager.pkg.tar.*

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: theme-manager
          asset_name: theme-manager
          asset_content_type: application/octet-stream
