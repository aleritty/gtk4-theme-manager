name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  build:
    runs-on: node-lts-alpine

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Alpine
        run: |
          apk add --no-cache gcc musl-dev pkgconf gtk4.0-dev
        shell: sh

      - name: Build theme-manager
        run: |
          gcc `pkg-config --cflags gtk4` -o theme-manager theme-manager.c `pkg-config --libs gtk4`
        shell: sh

      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: theme-manager
          path: theme-manager

      - name: Build .deb package
        run: |
          mkdir -p debian/usr/bin debian/usr/share/icons/hicolor/256x256/apps debian/usr/share/applications
          cp theme-manager debian/usr/bin/
          cp favicon.png debian/usr/share/icons/hicolor/256x256/apps/theme-manager.png
          cp theme-manager.desktop debian/usr/share/applications/
          dpkg-deb --build debian theme-manager.deb
        shell: sh

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v2
        with:
          name: theme-manager-deb
          path: theme-manager.deb

  release:
    runs-on: node-lts-alpine
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: theme-manager
          asset_name: theme-manager
          asset_content_type: application/octet-stream
